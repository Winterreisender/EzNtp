// generated by Fast Light User Interface Designer (fluid) version 1.0308

#include "EzNtp.h"
#include "main.h"
#include <time.h>

using namespace std;

#define show_line() cout << __FILE__ << ":" << __LINE__ << endl;


Fl_Double_Window *window_main=(Fl_Double_Window *)0;
Fl_Button *btnRefreshTime=(Fl_Button *)0;
Fl_Input *serverTimeOutput=(Fl_Input *)0;
Fl_Input *sysTimeOutput=(Fl_Input *)0;
Fl_Button *btnSyncTime=(Fl_Button *)0;


void btnRefreshTimeClicked(Fl_Widget* _, void* __)
{
  auto ezNtp = EzNtp();
  show_line();
  ezNtp.initSocket();
  show_line();
  timeb ntpTime = ezNtp.getNtpTime();
  show_line();
  serverTimeOutput->value(Utils::timebToString(ntpTime).c_str());
  show_line();
  ezNtp.closeSocket();

  timeb sysTimeb;
  show_line();
  ftime(&sysTimeb);
  sysTimeOutput->value(Utils::timebToString(sysTimeb).c_str());
}

void btnSyncTimeClicked(Fl_Widget* _, void* __)
{
  auto ezNtp = EzNtp();
  ezNtp.initSocket();
  auto result = ezNtp.syncTime();
  btnSyncTime->label(((result == 0) ? "Success" : "Error"));
  ezNtp.closeSocket();
}


int fltk_main(int argc, char **argv) {
  window_main = new Fl_Double_Window(282, 140, "EzTimeSync");
  window_main->align(Fl_Align(FL_ALIGN_CLIP|FL_ALIGN_INSIDE));
  btnRefreshTime = new Fl_Button(35, 95, 100, 25, "\345\210\267\346\226\260");
  btnRefreshTime->callback((Fl_Callback*)btnRefreshTimeClicked, NULL);

  serverTimeOutput = new Fl_Input(85, 22, 170, 23, "\346\234\215\345\212\241\345\231\250\346\227\266\351\227\264");

  sysTimeOutput = new Fl_Input(85, 57, 170, 23, "\347\263\273\347\273\237\346\227\266\351\227\264");
  btnSyncTime = new Fl_Button(155, 95, 100, 25, "\345\220\214\346\255\245");
  btnSyncTime->callback((Fl_Callback*)btnSyncTimeClicked, NULL);
  window_main->end();
  window_main->show(argc, argv);
  return Fl::run();
}

int main(int argc, char **argv) {
  return fltk_main(argc, argv);
}
